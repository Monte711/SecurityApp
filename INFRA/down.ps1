# PowerShell –≤–µ—Ä—Å–∏—è down.sh –¥–ª—è Windows
# down.ps1 - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã

param(
    [switch]$RemoveImages = $false,
    [switch]$RemoveVolumes = $false,
    [switch]$Force = $false
)

Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Unified Enterprise Cybersecurity Platform..." -ForegroundColor Yellow
Write-Host "=============================================="

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞
$ScriptDir = Split-Path -Parent $MyInvocation.MyCommand.Path
Set-Location $ScriptDir

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
try {
    docker --version | Out-Null
}
catch {
    Write-Host "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
    exit 1
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
try {
    if ($RemoveVolumes) {
        Write-Host "   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ volumes..." -ForegroundColor Yellow
        docker-compose -f docker-compose.yml down -v
    } else {
        docker-compose -f docker-compose.yml down
    }
}
catch {
    Write-Host "‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ: $_" -ForegroundColor Yellow
    if ($Force) {
        Write-Host "   üî® –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞..." -ForegroundColor Red
        docker stop $(docker ps -q --filter "name=cybersec_") 2>$null
        docker rm $(docker ps -aq --filter "name=cybersec_") 2>$null
    }
}

# –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤ (–µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–æ)
if ($RemoveImages) {
    Write-Host "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
    try {
        docker image prune -f
        Write-Host "   ‚úÖ –û–±—Ä–∞–∑—ã –æ—á–∏—â–µ–Ω—ã" -ForegroundColor Green
    }
    catch {
        Write-Host "   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ–±—Ä–∞–∑–æ–≤: $_" -ForegroundColor Yellow
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –≤—Å–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
$runningContainers = docker ps --filter "name=cybersec_" --format "table {{.Names}}" 2>$null
if ($runningContainers) {
    Write-Host "‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤—Å–µ –µ—â–µ –∑–∞–ø—É—â–µ–Ω—ã:" -ForegroundColor Yellow
    Write-Host $runningContainers
} else {
    Write-Host "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
}

Write-Host ""
Write-Host "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Docker:"
try {
    Write-Host "   –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: $(docker ps -a | Measure-Object | Select-Object -ExpandProperty Count) –≤—Å–µ–≥–æ"
    Write-Host "   –û–±—Ä–∞–∑—ã: $(docker images | Measure-Object | Select-Object -ExpandProperty Count) –≤—Å–µ–≥–æ"
    Write-Host "   Volumes: $(docker volume ls | Measure-Object | Select-Object -ExpandProperty Count) –≤—Å–µ–≥–æ"
}
catch {
    Write-Host "   –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É Docker"
}

Write-Host ""
Write-Host "üöÄ –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./up.ps1" -ForegroundColor Cyan

# –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏
Write-Host ""
Write-Host "üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏:" -ForegroundColor Yellow
Write-Host "   ./down.ps1                    # –û–±—ã—á–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞"
Write-Host "   ./down.ps1 -RemoveVolumes     # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ + —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö"
Write-Host "   ./down.ps1 -RemoveImages      # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ + –æ—á–∏—Å—Ç–∫–∞ –æ–±—Ä–∞–∑–æ–≤"
Write-Host "   ./down.ps1 -Force             # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞"
